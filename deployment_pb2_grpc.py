# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import deployment_pb2 as deployment__pb2
import empty_pb2 as empty__pb2


class DeploymentManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDeploymentsForUser = channel.unary_stream(
                '/api.DeploymentManagementService/GetDeploymentsForUser',
                request_serializer=deployment__pb2.GetDeploymentsForUserRequest.SerializeToString,
                response_deserializer=deployment__pb2.Deployment.FromString,
                )
        self.CreateDeployment = channel.unary_unary(
                '/api.DeploymentManagementService/CreateDeployment',
                request_serializer=deployment__pb2.NewDeployment.SerializeToString,
                response_deserializer=deployment__pb2.Deployment.FromString,
                )
        self.GetDeployment = channel.unary_unary(
                '/api.DeploymentManagementService/GetDeployment',
                request_serializer=deployment__pb2.GetDeploymentRequest.SerializeToString,
                response_deserializer=deployment__pb2.Deployment.FromString,
                )
        self.RemoveDeployment = channel.unary_unary(
                '/api.DeploymentManagementService/RemoveDeployment',
                request_serializer=deployment__pb2.RemoveDeploymentRequest.SerializeToString,
                response_deserializer=empty__pb2.Empty.FromString,
                )


class DeploymentManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDeploymentsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeploymentManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDeploymentsForUser': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDeploymentsForUser,
                    request_deserializer=deployment__pb2.GetDeploymentsForUserRequest.FromString,
                    response_serializer=deployment__pb2.Deployment.SerializeToString,
            ),
            'CreateDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDeployment,
                    request_deserializer=deployment__pb2.NewDeployment.FromString,
                    response_serializer=deployment__pb2.Deployment.SerializeToString,
            ),
            'GetDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeployment,
                    request_deserializer=deployment__pb2.GetDeploymentRequest.FromString,
                    response_serializer=deployment__pb2.Deployment.SerializeToString,
            ),
            'RemoveDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDeployment,
                    request_deserializer=deployment__pb2.RemoveDeploymentRequest.FromString,
                    response_serializer=empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.DeploymentManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeploymentManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDeploymentsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.DeploymentManagementService/GetDeploymentsForUser',
            deployment__pb2.GetDeploymentsForUserRequest.SerializeToString,
            deployment__pb2.Deployment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.DeploymentManagementService/CreateDeployment',
            deployment__pb2.NewDeployment.SerializeToString,
            deployment__pb2.Deployment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.DeploymentManagementService/GetDeployment',
            deployment__pb2.GetDeploymentRequest.SerializeToString,
            deployment__pb2.Deployment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.DeploymentManagementService/RemoveDeployment',
            deployment__pb2.RemoveDeploymentRequest.SerializeToString,
            empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
